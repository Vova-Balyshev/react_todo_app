{"version":3,"sources":["utils/fetchClient.ts","types/FilterType.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Footer.tsx","components/TodoItem.tsx","components/Header.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","FilterType","client","getUserByEmail","email","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","Footer","memo","todos","filterType","handleFilter","handleDeleteTodo","completedTodos","filter","todo","completed","length","href","cn","selected","All","onClick","Active","Completed","forEach","TodoItem","props","handleDeleteTodos","handleUpdateTodos","selectedTodoId","isLoading","title","isDoubleClicked","setIsDoubleClicked","updatedTitle","setUpdatedTitle","checked","onKeyDown","key","onBlur","role","onDoubleClick","Header","todoTitle","handleTogleAll","handleAddTodo","setTodoTitle","newTodoField","useRef","current","focus","active","every","ref","App","useContext","setTodos","userId","setUserId","setFilterType","togler","setTogler","setIsLoading","setSelectedTodoId","getTodos","res","catch","useCallback","trim","prev","newTodo","newState","targetTodo","findIndex","finally","todoId","deleteTodo","updateTodo","updatedTodo","map","preparedTodos","useMemo","Root","createRoot","document","getElementById","render"],"mappings":"+OAAMA,EAAW,oCAEjB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,WAAWD,EAASF,EACtB,GACF,CAIA,SAASI,EACPC,GAGa,IAFbC,EAAqB,uDAAG,MACxBC,EAAS,uDAAG,KAENC,EAAuB,CAAEF,UAS/B,OAPIC,IACFC,EAAQC,KAAOC,KAAKC,UAAUJ,GAC9BC,EAAQI,QAAU,CAChB,eAAgB,oCAIbb,EAAK,KACTc,MAAK,kBAAMC,MAAMhB,EAAWO,EAAKG,EAAQ,IACzCK,MAAK,SAAAE,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAGZ,OAAOF,EAASG,MAClB,GACJ,CAEO,IClCKC,EDkCCC,EACN,SAAIf,GAAW,OAAKD,EAAWC,EAAI,EAD7Be,EAEL,SAAIf,EAAaE,GAAS,OAAKH,EAAWC,EAAK,OAAQE,EAAK,EAFvDa,EAGJ,SAAIf,EAAaE,GAAS,OAAKH,EAAWC,EAAK,QAASE,EAAK,EAHzDa,EAIH,SAACf,GAAW,OAAKD,EAAQC,EAAK,SAAS,E,8BEpCpCgB,EAAc,iDAAG,WAAOC,GAAa,iGAC5BF,EAAU,uBAAyBE,IAAS,KAAD,EAApD,OAALC,EAAK,yBAEJA,EAAM,IAAM,MAAI,2CACxB,gBAJ0B,sCAQdC,EAAU,iDAAG,iGAAoB,OAAXF,EAAK,EAALA,MAAOG,EAAI,EAAJA,KAAI,kBACrCL,EAAkB,SAAU,CAAEE,QAAOG,UAAO,2CACpD,gBAFsB,sC,OCDVC,EAA4B,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QAC1C,EAA0BC,mBAAS,IAAG,mBAA/BN,EAAK,KAAEO,EAAQ,KACtB,EAAwBD,mBAAS,IAAG,mBAA7BH,EAAI,KAAEK,EAAO,KACpB,EAA4CF,oBAAS,GAAM,mBAApDG,EAAc,KAAEC,EAAiB,KACxC,EAA8BJ,oBAAS,GAAM,mBAAtCK,EAAO,KAAEC,EAAU,KAC1B,EAAwCN,mBAAS,IAAG,mBAA7CO,EAAY,KAAEC,EAAe,KAE9BC,EAAW,SAACC,GAChBC,aAAaC,QAAQ,OAAQ9B,KAAKC,UAAU2B,IAC5CX,EAAQW,EACV,EAEAG,qBAAU,WACR,IAAMC,EAAWH,aAAaI,QAAQ,QAEtC,GAAKD,EAIL,IACE,IAAMJ,EAAO5B,KAAKkC,MAAMF,GAExBf,EAAQW,EAGV,CAFE,MAAOO,GAET,CACF,GAAG,CAAClB,IAEJ,IAAMmB,EAAQ,iDAAG,8GACIzB,EAAeC,GAAO,KAAD,GAAlCgB,EAAI,QAGRD,EAASC,GAETN,GAAkB,GACnB,2CACF,kBARa,mCAeRe,EAAY,iDAAG,WAAOC,GAAsB,2EAI/B,GAHjBA,EAAMC,iBAENb,EAAgB,IAChBF,GAAW,GAAM,UAGXH,EAAe,CAAD,+BAXbP,EAAW,CAAEC,OAAMH,UACvBT,KAAKwB,GAWiB,KAAD,0CAEdS,IAAW,KAAD,qDAGlBV,EAAgB,yBAAyB,QAEvB,OAFuB,UAEzCF,GAAW,GAAO,6EAErB,gBAjBiB,sCAmBlB,OACE,uBAAMgB,SAAUH,EAAcI,UAAU,WAAU,UAChD,oBAAIA,UAAU,aAAY,SACvBpB,EAAiB,uBAAyB,yBAG7C,sBAAKoB,UAAU,QAAO,UACpB,uBAAOA,UAAU,QAAQC,QAAQ,aAAY,mBAI7C,sBACED,UAAWE,IAAW,yBAA0B,CAC9C,aAAcpB,IACb,UAEH,uBACEqB,KAAK,QACLC,GAAG,aACHJ,UAAWE,IAAW,QAAS,CAC7B,aAActB,GAAkBI,IAElCqB,YAAY,mBACZC,SAAUxB,GAAWF,EACrB2B,MAAOpC,EACPqC,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAIhC,EAASgC,EAAEC,OAAOJ,MAAM,IAGzC,sBAAMP,UAAU,wBAAuB,SACrC,mBAAGA,UAAU,0BAIfpB,GAAkBI,GAClB,mBAAGgB,UAAU,iBAAgB,SAAEhB,OAIlCJ,GACC,sBAAKoB,UAAU,QAAO,UACpB,uBAAOA,UAAU,QAAQC,QAAQ,YAAW,uBAI5C,sBACED,UAAWE,IAAW,yBAA0B,CAC9C,aAAcpB,IACb,UAEH,uBACEqB,KAAK,OACLC,GAAG,YACHJ,UAAWE,IAAW,QAAS,CAC7B,YAAatB,GAAkBI,IAEjCqB,YAAY,kBACZG,UAAQ,EACRI,UAAW,EACXN,SAAUxB,EACVyB,MAAOjC,EACPmC,SAAU,SAAAC,GAAC,OAAI/B,EAAQ+B,EAAEC,OAAOJ,MAAM,IAGxC,sBAAMP,UAAU,wBAAuB,SACrC,mBAAGA,UAAU,qBAIhBpB,GAAkBI,GACjB,mBAAGgB,UAAU,iBAAgB,SAAEhB,OAKrC,qBAAKgB,UAAU,QAAO,SACpB,wBACEG,KAAK,SACLH,UAAWE,IAAW,oBAAqB,CACzC,aAAcpB,IACb,SAEFF,EAAiB,WAAa,cAKzC,EC3JaiC,EAAcC,IAAMC,cAA2B,MAM/CC,EAAgC,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAC9C,EAAwBxC,mBAAsB,MAAK,mBAA5CU,EAAI,KAAE+B,EAAO,KAEpB,OAAK/B,EAKH,cAAC0B,EAAYM,SAAQ,CAACZ,MAAOpB,EAAK,SAC/B8B,IALI,cAAC,EAAQ,CAACzC,QAAS0C,GAQ9B,GHjBC,SAJWlD,OAAU,aAAVA,IAAU,mBAAVA,IAAU,yBAIrB,CAJWA,MAAU,KIWf,IAAMoD,EAA0BN,IAAMO,MAAK,YAK3C,IAJLC,EAAK,EAALA,MACAC,EAAU,EAAVA,WACAC,EAAY,EAAZA,aACAC,EAAgB,EAAhBA,iBAEMC,EACJJ,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,SAAS,IAWrC,OACE,yBAAQ7B,UAAU,kBAAkB,UAAQ,SAAQ,UAClD,sBAAMA,UAAU,aAAa,UAAQ,eAAc,mBAC7CsB,EAAMQ,OAASJ,EAAeI,OAAM,gBAG1C,sBAAK9B,UAAU,SAAS,UAAQ,SAAQ,UACtC,mBACE,UAAQ,gBACR+B,KAAK,KACL/B,UAAWgC,IACT,eACA,CAAEC,SAAUV,IAAevD,EAAWkE,MAExCC,QAAS,kBAAMX,EAAaxD,EAAWkE,IAAI,EAAC,iBAK9C,mBACE,UAAQ,mBACRH,KAAK,WACL/B,UAAWgC,IACT,eACA,CAAEC,SAAUV,IAAevD,EAAWoE,SAExCD,QAAS,kBAAMX,EAAaxD,EAAWoE,OAAO,EAAC,oBAIjD,mBACE,UAAQ,sBACRL,KAAK,cACL/B,UAAWgC,IACT,eACA,CAAEC,SAAUV,IAAevD,EAAWqE,YAExCF,QAAS,kBAAMX,EAAaxD,EAAWqE,UAAU,EAAC,0BAMrDX,EAAeI,OAAS,GACvB,wBACE,UAAQ,uBACR3B,KAAK,SACLH,UAAU,2BACVmC,QAAS,WAvDfb,EAAMgB,SAAQ,SAAAV,GACRA,EAAKC,WACPJ,EAAiBG,EAAKxB,GAE1B,GAmDqC,EAAC,+BAO1C,ICxEamC,EAA4BzB,IAAMO,MAAK,SAACmB,GACnD,IACEZ,EAKEY,EALFZ,KACAa,EAIED,EAJFC,kBACAC,EAGEF,EAHFE,kBACAC,EAEEH,EAFFG,eACAC,EACEJ,EADFI,UAEMxC,EAAyBwB,EAAzBxB,GAAIyC,EAAqBjB,EAArBiB,MAAOhB,EAAcD,EAAdC,UACnB,EAA8CpD,oBAAS,GAAM,mBAAtDqE,EAAe,KAAEC,EAAkB,KAC1C,EAAwCtE,mBAASoE,GAAM,mBAAhDG,EAAY,KAAEC,EAAe,KAiB9BrD,EAAe,SAACc,GACpBA,EAAEZ,iBAfFiD,GAAmB,GACfC,IAAiBH,IAIO,IAAxBG,EAAalB,OAMjBY,EAAkBtC,EAAI,CAAEyC,MAAOG,IAL7BP,EAAkBrC,GAWtB,EAEA,OACE,sBACE,UAAQ,OACRJ,UAAWgC,IACT,OACA,CAAEH,cACF,UAEF,uBACE7B,UAAU,qBAAoB,SAE9B,uBACE,UAAQ,aACRG,KAAK,WACL+C,QAASrB,EACT7B,UAAU,eACVM,SAAUwC,EACVX,QAAS,WACPO,EACEtC,EAAI,CAAEyB,WAAYA,GAEtB,MAGHiB,EAEG,mCACE,sBAAM/C,SAAUH,EAAa,SAC3B,uBACE,UAAQ,iBACRO,KAAK,OACLE,YAAY,6BACZE,MAAOyC,EACPvC,SAAU,SAACC,GACTuC,EAAgBvC,EAAEC,OAAOJ,MAC3B,EACAP,UAAU,oBACVmD,UAAW,SAACzC,GACI,WAAVA,EAAE0C,MACJL,GAAmB,GACnBE,EAAgBJ,GAEpB,EACAQ,OAAQzD,QAOd,qCACE,sBACE,UAAQ,YACR0D,KAAK,eACLtD,UAAU,cACVuD,cAAe,WACbR,GAAmB,EACrB,EAAE,SAEDF,IAEH,wBACE1C,KAAK,SACLH,UAAU,eACV,UAAQ,mBACRmC,QAAS,kBAAMM,EAAkBrC,EAAG,EAAC,mBAIrCuC,IAAmBvC,IAAc,IAARA,IACzB,sBACE,UAAQ,aACRJ,UAAWgC,IAAG,gBACZ,CAAE,YAAaY,IAAa,UAE9B,qBAAK5C,UAAU,8CACf,qBAAKA,UAAU,mBAO/B,ICjHawD,EAA0BnC,gBAAK,SAACmB,GAC3C,IACElB,EACEkB,EADFlB,MAAOmC,EACLjB,EADKiB,UAAWC,EAChBlB,EADgBkB,eAAgBC,EAChCnB,EADgCmB,cAAeC,EAC/CpB,EAD+CoB,aAE7CC,EAAeC,iBAAyB,MAQ9C,OANAxE,qBAAU,WACJuE,EAAaE,SACfF,EAAaE,QAAQC,OAEzB,GAAG,IAGD,yBAAQhE,UAAU,kBAAiB,UACjC,wBACE,UAAQ,kBACRG,KAAK,SACLH,UAAWgC,IACT,sBACA,CACEiC,OAAQ3C,EAAM4C,OAAM,SAAAtC,GAAI,OAAIA,EAAKC,SAAS,MAG9CM,QAAS,kBAAMuB,GAAgB,IAGjC,sBAAM3D,SAAU,SAACF,GAAK,OAAK8D,EAAc9D,EAAM,EAAC,SAC9C,uBACE,UAAQ,eACRM,KAAK,OACLgE,IAAKN,EACL7D,UAAU,oBACVK,YAAY,yBACZE,MAAOkD,EACPhD,SAAU,SAACZ,GAAK,OAAK+D,EAAa/D,EAAMc,OAAOJ,MAAM,QAK/D,IChCa6D,EAAgB,WAE3B,IAAMjF,EAAOkF,qBAAWxD,GACxB,EAA0BpC,mBAAiB,IAAG,mBAAvC6C,EAAK,KAAEgD,EAAQ,KACtB,EAAkC7F,mBAAS,IAAG,mBAAvCgF,EAAS,KAAEG,EAAY,KAC9B,EAA4BnF,mBAAS,GAAE,mBAAhC8F,EAAM,KAAEC,EAAS,KACxB,EAAoC/F,mBAAST,EAAWkE,KAAI,mBAArDX,EAAU,KAAEkD,EAAa,KAChC,EAA4BhG,oBAAS,GAAK,mBAAnCiG,EAAM,KAAEC,EAAS,KACxB,EAAkClG,oBAAS,GAAM,mBAA1CmE,EAAS,KAAEgC,EAAY,KAC9B,EAA4CnG,mBAAS,GAAE,mBAAhDkE,EAAc,KAAEkC,EAAiB,KACxC,EAAwCpG,mBAAS,IAAG,mBAA7CO,EAAY,KAAEC,EAAe,KAEpCK,qBAAU,WACJH,IACFqF,EAAUrF,EAAKiB,ICjCG,SAACmE,GACvB,OAAOtG,EAAU,wBAA0BsG,GAC7C,CDgCMO,CAAa,OAAJ3F,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,IACZ1C,MAAK,SAAAqH,GAAG,OAAIT,EAASS,EAAI,IACzBC,OAAM,kBAAM/F,EAAgB,wBAAwB,IAE3D,GAAG,CAACE,IAEJ,IAAMwE,EAAgBsB,uBAAY,SAACpF,GCpCd,IAAC+B,GDqCpB/B,EAAMC,iBAE0B,IAA5B2D,EAAUyB,OAAOpD,SAMrB8C,GAAa,GAEbN,GAAS,SAACa,GAAI,4BACTA,GAAI,CACP,CACE/E,IAAK,EACLmE,SACA1B,MAAOY,EACP5B,WAAW,IACZ,KCtDiBD,ED0DZ,CACNiB,MAAOY,EACPc,SACA1C,WAAW,GC5DR5D,EAAkB,SAAU2D,ID6D9BlE,MAAK,SAAC0H,GACPd,GAAS,SAACa,GACR,IAAME,EAAQ,YAAOF,GACfG,EAAaH,EAChBI,WAAU,SAAA3D,GAAI,OAAiB,IAAbA,EAAKxB,EAAS,IAEnC,OAAoB,IAAhBkF,EACKH,GAGTE,EAASC,GAAcF,EAEhBC,EACT,GACF,IACGL,OAAM,kBAAM/F,EAAgB,uBAAuB,IACnDuG,SAAQ,WACP5B,EAAa,IACbgB,GAAa,GACb3F,EAAgB,GAClB,KA1CAA,EAAgB,uBA2CpB,GAAG,CAACwE,EAAWc,IAET9B,EAAoBwC,uBAAY,SAACQ,GACrCb,GAAa,GACbC,EAAkBY,GCnFI,SAACA,GACzB,OAAOxH,EAAc,UAAD,OAAWwH,GACjC,CDkFIC,CAAWD,GACR/H,MAAK,SAAAqH,GACAA,GACFT,GAAS,SAACa,GAAI,OAAKA,EAAKxD,QAAO,SAAAC,GAAI,OAAIA,EAAKxB,KAAOqF,CAAM,GAAC,GAE9D,IACCT,OAAM,kBAAM/F,EAAgB,0BAA0B,IACtDuG,SAAQ,WACPZ,GAAa,GACb3F,EAAgB,GAClB,GACJ,GAAG,IAEGyD,EAAoBuC,uBACxB,SAACQ,EAAgBrI,GACfwH,GAAa,GACbC,EAAkBY,GChGE,SAACA,EAAgBrI,GACzC,OAAOa,EAAY,iBAAiBwH,GAAUrI,EAChD,CD+FMuI,CAAWF,EAAQrI,GAChBM,MAAK,SAAAkI,GACJtB,GAAS,SAAAa,GAAI,OACXA,EAAKU,KAAI,SAAAjE,GAAI,OAAKA,EAAKxB,KAAOqF,EAC1BG,EACAhE,CAAI,GAAE,GAEd,IACCoD,OAAM,kBAAM/F,EAAgB,0BAA0B,IACtDuG,SAAQ,WACPvG,EAAgB,IAChB2F,GAAa,EACf,GACJ,GAAG,IAWCkB,EAAgBC,mBAAQ,WAC5B,OAAQxE,GACN,KAAKvD,EAAWoE,OACd,OAAOd,EAAMK,QAAO,SAAAC,GAAI,OAAKA,EAAKC,SAAS,IAC7C,KAAK7D,EAAWqE,UACd,OAAOf,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,SAAS,IAC5C,QACE,OAAO,YAAIP,GAEjB,GAAG,CAACA,EAAOC,IAEX,OACE,sBAAKvB,UAAU,UAAS,UACtB,oBAAIA,UAAU,iBAAgB,mBAC9B,cAACwD,EAAM,CACLlC,MAAOA,EACPmC,UAAWA,EACXG,aAAcA,EACdD,cAAeA,EACfD,eA3BiB,WACrBpC,EAAMgB,SAAQ,SAAAV,GAAI,OAChBc,EAAkBd,EAAKxB,GAAI,CAAEyB,UAAW6C,GAAS,IAEnDG,EAAkB,GAClBF,GAAWD,EACb,IAwBI,sBAAK1E,UAAU,mBAAkB,UAC9BsB,EAAMQ,OAAS,GACd,yBAAS9B,UAAU,gBAAgB,UAAQ,WAAU,SAClD8F,EAAcD,KAAI,SAAAjE,GAAI,OACrB,cAACW,EAAQ,CACPX,KAAMA,EACNa,kBAAmBA,EACnBC,kBAAmBA,EACnBE,UAAWA,EAEXD,eAAgBA,GADXf,EAAKxB,GAEV,MAIR,cAACgB,EAAM,CACLE,MAAOwE,EACPvE,WAAYA,EACZC,aAAciD,EACdhD,iBAAkBgB,OAIrBzD,GACC,sBACE,UAAQ,oBACRgB,UAAU,yDAAwD,UAElE,wBACE,UAAQ,kBACRG,KAAK,SACLH,UAAU,SACVmC,QAAS,kBAAMlD,EAAgB,GAAG,IAEnCD,OAKX,EE5LMgH,EAAiB,WAAH,OAClB,cAAC,EAAY,UACX,cAAC,EAAG,KACS,EAGjBC,qBAAWC,SAASC,eAAe,SAChCC,OAAO,cAAC,EAAI,I","file":"static/js/main.8dd8c3d1.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum FilterType {\n  All,\n  Active,\n  Completed,\n}\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, [onLogin]);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { FilterType } from '../types/FilterType';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  filterType: FilterType;\n  handleFilter: (filterType: FilterType) => void;\n  handleDeleteTodo: (id: number) => void;\n}\n\nexport const Footer: React.FC<Props> = React.memo(({\n  todos,\n  filterType,\n  handleFilter,\n  handleDeleteTodo,\n}) => {\n  const completedTodos = (\n    todos.filter(todo => todo.completed)\n  );\n\n  const clearCompleted = () => {\n    todos.forEach(todo => {\n      if (todo.completed) {\n        handleDeleteTodo(todo.id);\n      }\n    });\n  };\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todos.length - completedTodos.length} left todo`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={cn(\n            'filter__link',\n            { selected: filterType === FilterType.All },\n          )}\n          onClick={() => handleFilter(FilterType.All)}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={cn(\n            'filter__link',\n            { selected: filterType === FilterType.Active },\n          )}\n          onClick={() => handleFilter(FilterType.Active)}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={cn(\n            'filter__link',\n            { selected: filterType === FilterType.Completed },\n          )}\n          onClick={() => handleFilter(FilterType.Completed)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      {completedTodos.length > 0 && (\n        <button\n          data-cy=\"ClearCompletedButton\"\n          type=\"button\"\n          className=\"todoapp__clear-completed\"\n          onClick={() => clearCompleted()}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n});\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { FormEvent, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  handleUpdateTodos: (id: number, data: {}) => void;\n  handleDeleteTodos: (id: number) => void;\n  isLoading: boolean;\n  selectedTodoId: number;\n}\n\nexport const TodoItem: React.FC<Props> = React.memo((props) => {\n  const {\n    todo,\n    handleDeleteTodos,\n    handleUpdateTodos,\n    selectedTodoId,\n    isLoading,\n  } = props;\n  const { id, title, completed } = todo;\n  const [isDoubleClicked, setIsDoubleClicked] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(title);\n\n  const handleTitleUpdate = () => {\n    setIsDoubleClicked(false);\n    if (updatedTitle === title) {\n      return;\n    }\n\n    if (updatedTitle.length === 0) {\n      handleDeleteTodos(id);\n\n      return;\n    }\n\n    handleUpdateTodos(id, { title: updatedTitle });\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    handleTitleUpdate();\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={cn(\n        'todo',\n        { completed },\n      )}\n    >\n      <label\n        className=\"todo__status-label\"\n      >\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          checked={completed}\n          className=\"todo__status\"\n          disabled={isDoubleClicked}\n          onClick={() => {\n            handleUpdateTodos(\n              id, { completed: !completed },\n            );\n          }}\n        />\n      </label>\n      {isDoubleClicked\n        ? (\n          <>\n            <form onSubmit={handleSubmit}>\n              <input\n                data-cy=\"TodoTitleField\"\n                type=\"text\"\n                placeholder=\"Empty todo will be deleted\"\n                value={updatedTitle}\n                onChange={(e) => {\n                  setUpdatedTitle(e.target.value);\n                }}\n                className=\"todo__title-field\"\n                onKeyDown={(e) => {\n                  if (e.key === 'Escape') {\n                    setIsDoubleClicked(false);\n                    setUpdatedTitle(title);\n                  }\n                }}\n                onBlur={handleSubmit}\n              />\n\n            </form>\n          </>\n        )\n        : (\n          <>\n            <span\n              data-cy=\"TodoTitle\"\n              role=\"presentation\"\n              className=\"todo__title\"\n              onDoubleClick={() => {\n                setIsDoubleClicked(true);\n              }}\n            >\n              {title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              data-cy=\"TodoDeleteButton\"\n              onClick={() => handleDeleteTodos(id)}\n            >\n              ×\n            </button>\n            {(selectedTodoId === id || id === -1) && (\n              <div\n                data-cy=\"TodoLoader\"\n                className={cn('modal overlay',\n                  { 'is-active': isLoading })}\n              >\n                <div className=\"modal-background has-background-white-ter\" />\n                <div className=\"loader\" />\n              </div>\n            )}\n          </>\n        )}\n    </div>\n  );\n});\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  FormEvent, memo, useEffect, useRef,\n} from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  todoTitle: string;\n  handleTogleAll: () => void;\n  handleAddTodo: (event: FormEvent) => void;\n  setTodoTitle: (todoTitle: string) => void;\n}\n\nexport const Header: React.FC<Props> = memo((props) => {\n  const {\n    todos, todoTitle, handleTogleAll, handleAddTodo, setTodoTitle,\n  } = props;\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        data-cy=\"ToggleAllButton\"\n        type=\"button\"\n        className={cn(\n          'todoapp__toggle-all',\n          {\n            active: todos.every(todo => todo.completed),\n          },\n        )}\n        onClick={() => handleTogleAll()}\n      />\n\n      <form onSubmit={(event) => handleAddTodo(event)}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={newTodoField}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={todoTitle}\n          onChange={(event) => setTodoTitle(event.target.value)}\n        />\n      </form>\n    </header>\n  );\n});\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  FormEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  addTodo,\n  deleteTodo,\n  getTodos,\n  updateTodo,\n} from './api/todos';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { Footer } from './components/Footer';\nimport { FilterType } from './types/FilterType';\nimport { Todo } from './types/Todo';\nimport { TodoItem } from './components/TodoItem';\nimport { Header } from './components/Header';\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const user = useContext(AuthContext);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [filterType, setFilterType] = useState(FilterType.All);\n  const [togler, setTogler] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    if (user) {\n      setUserId(user.id);\n      getTodos(user?.id)\n        .then(res => setTodos(res))\n        .catch(() => setErrorMessage('Unable to load a todo'));\n    }\n  }, [user]);\n\n  const handleAddTodo = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (todoTitle.trim().length === 0) {\n      setErrorMessage('Please write a title');\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    setTodos((prev) => ([\n      ...prev,\n      {\n        id: -1,\n        userId,\n        title: todoTitle,\n        completed: false,\n      },\n    ]\n    ));\n\n    addTodo({\n      title: todoTitle,\n      userId,\n      completed: false,\n    }).then((newTodo: Todo) => {\n      setTodos((prev) => {\n        const newState = [...prev];\n        const targetTodo = prev\n          .findIndex(todo => todo.id === -1);\n\n        if (targetTodo === -1) {\n          return prev;\n        }\n\n        newState[targetTodo] = newTodo;\n\n        return newState;\n      });\n    })\n      .catch(() => setErrorMessage('Unable to add a todo'))\n      .finally(() => {\n        setTodoTitle('');\n        setIsLoading(false);\n        setErrorMessage('');\n      });\n  }, [todoTitle, userId]);\n\n  const handleDeleteTodos = useCallback((todoId: number) => {\n    setIsLoading(true);\n    setSelectedTodoId(todoId);\n    deleteTodo(todoId)\n      .then(res => {\n        if (res) {\n          setTodos((prev) => prev.filter(todo => todo.id !== todoId));\n        }\n      })\n      .catch(() => setErrorMessage('Unable to delete a todo'))\n      .finally(() => {\n        setIsLoading(false);\n        setErrorMessage('');\n      });\n  }, []);\n\n  const handleUpdateTodos = useCallback(\n    (todoId: number, data: Partial<Todo>) => {\n      setIsLoading(true);\n      setSelectedTodoId(todoId);\n      updateTodo(todoId, data)\n        .then(updatedTodo => {\n          setTodos(prev => (\n            prev.map(todo => (todo.id === todoId\n              ? updatedTodo\n              : todo))\n          ));\n        })\n        .catch(() => setErrorMessage('Unable to update a todo'))\n        .finally(() => {\n          setErrorMessage('');\n          setIsLoading(false);\n        });\n    }, [],\n  );\n\n  const handleTogleAll = () => {\n    todos.forEach(todo => (\n      handleUpdateTodos(todo.id, { completed: togler })\n    ));\n    setSelectedTodoId(0);\n    setTogler(!togler);\n  };\n\n  const preparedTodos = useMemo(() => {\n    switch (filterType) {\n      case FilterType.Active:\n        return todos.filter(todo => !todo.completed);\n      case FilterType.Completed:\n        return todos.filter(todo => todo.completed);\n      default:\n        return [...todos];\n    }\n  }, [todos, filterType]);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n      <Header\n        todos={todos}\n        todoTitle={todoTitle}\n        setTodoTitle={setTodoTitle}\n        handleAddTodo={handleAddTodo}\n        handleTogleAll={handleTogleAll}\n      />\n\n      <div className=\"todoapp__content\">\n        {todos.length > 0 && (\n          <section className=\"todoapp__main\" data-cy=\"TodoList\">\n            {preparedTodos.map(todo => (\n              <TodoItem\n                todo={todo}\n                handleDeleteTodos={handleDeleteTodos}\n                handleUpdateTodos={handleUpdateTodos}\n                isLoading={isLoading}\n                key={todo.id}\n                selectedTodoId={selectedTodoId}\n              />\n            ))}\n          </section>\n        )}\n        <Footer\n          todos={preparedTodos}\n          filterType={filterType}\n          handleFilter={setFilterType}\n          handleDeleteTodo={handleDeleteTodos}\n        />\n      </div>\n\n      {errorMessage && (\n        <div\n          data-cy=\"ErrorNotification\"\n          className=\"notification is-danger is-light has-text-weight-normal\"\n        >\n          <button\n            data-cy=\"HideErrorButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setErrorMessage('')}\n          />\n          {errorMessage}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (todo: Partial<Todo>) => {\n  return client.post<Todo>('/todos', todo);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = (todoId: number, data: {}) => {\n  return client.patch<Todo>(`/todos/${todoId}`, data);\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root: React.FC = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}